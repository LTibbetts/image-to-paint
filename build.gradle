//******************************************************************************
// Copyright (C) 2016 University of Oklahoma Board of Trustees.
//******************************************************************************
// Last modified: Thursday May  4 02:09:00 2018 by Logan Tibbetts
//******************************************************************************
// Major Modification History:
//
// 20160209 [weaver]:	Original file.
// 20180501 [logan]: Adopted Heavily to complete in class project.
//
//******************************************************************************
// Notes:
//
// To compile on the command line
// 1. Go to the directory that contains build.gradle
// 2. Run "gradle installDist"
//
// To run on the command line
// 1. Go to directory build/install/image2paint/bin
// 2. Run the script for your operating system
//******************************************************************************

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'

//******************************************************************************

// Adapted from http://stackoverflow.com/questions/18421857/
// See also http://stackoverflow.com/questions/21241767/
//
// Creates scripts for entry points
// Subproject must apply application plugin to be able to call this method.
def createScript(project, mainClass, name, jvmOpts) {
  project.tasks.create(name: name, type: CreateStartScripts) {
    applicationName = name
    mainClassName   = mainClass
	defaultJvmOpts  = jvmOpts
    outputDir       = new File(project.buildDir, 'scripts')
    classpath       = project.tasks[JavaPlugin.JAR_TASK_NAME].outputs.files + project.configurations.runtime
  }
  project.tasks[name].dependsOn(project.jar)

  project.applicationDistribution.with {
    into("bin") {
      from(project.tasks[name])
      fileMode = 0755
    }
  }
}

//******************************************************************************

sourceCompatibility = 1.8

group = "image2paint"
version = '1.1.0'

applicationName = "image2paint"
mainClassName = "image2paint.Application"
applicationDefaultJvmArgs = ['-Xms128m', '-Xmx756m', '-noclassgc',\
 '-Dfile.encoding=utf-8', '-Dapple.laf.useScreenMenuBar=false',\
 '-Dapple.awt.showGrowBox=true', '-Dapple.awt.brushMetalLook=false',\
 '-Dapple.awt.antialiasing=on', '-Dapple.awt.graphics.UseQuartz=true', ]

//******************************************************************************
// Alternative Start Scripts
//******************************************************************************

def altJvmArgs = ['-Xms128m', '-Xmx768m', '-noclassgc',\
 '-Dfile.encoding=utf-8', '-Dapple.laf.useScreenMenuBar=false',\
 '-Dapple.awt.showGrowBox=true', '-Dapple.awt.brushMetalLook=false',\
 '-Dapple.awt.antialiasing=on', '-Dapple.awt.graphics.UseQuartz=true', ]

createScript(project, 'image2paint.Application', 'image2paint', altJvmArgs)


//******************************************************************************
// Source Sets
//******************************************************************************

sourceSets
{
	main
	{
		resources
		{
			srcDir 'src/resources'
			//include ".*.rsrc"
			exclude "**/.DS_Store", "**/*.java.*"
		}
		java
		{
			srcDir 'src/'
		}
	}
}

//******************************************************************************
// Tasks
//******************************************************************************

jar
{
    manifest
    {
        attributes\
        	'Implementation-Title': 'image2paint',\
			'Implementation-Version': version,\
			'Main-Class': mainClassName

			manifest.attributes provider: 'tribe7.net'
    		manifest.attributes permissions: 'all-permissions'
    		manifest.attributes codebase: '*'
    }
}

javadoc
{
	maxMemory '756m'
}

// Hack to use alternative maximum stack and heap sizes in Windows start scripts.
// There are probably more elegant ways to do this in recent versions of Gradle.
// Note: This only affects primary scripts, not those using our createScript().
startScripts
{
	doLast
	{
		// Windows script file
		def wsf = file getWindowsScript()
	}
}

//******************************************************************************
